// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using statemachineSagasRabbitmqDemo.Infrastructure.Database;

#nullable disable

namespace statemachineSagasRabbitmqDemo.Infrastructure.DataAccess.Entities.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220701125824_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("File", "SagaDemo");
                });

            modelBuilder.Entity("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.FileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileDetail", "SagaDemo");
                });

            modelBuilder.Entity("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.FileLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateLog")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileLog", "SagaDemo");
                });

            modelBuilder.Entity("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.FileDetail", b =>
                {
                    b.HasOne("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.File", "File")
                        .WithMany("FileDetails")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.FileLog", b =>
                {
                    b.HasOne("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.File", "File")
                        .WithMany("FileLogs")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("statemachineSagasRabbitmqDemo.Infrastructure.Database.Entities.File", b =>
                {
                    b.Navigation("FileDetails");

                    b.Navigation("FileLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
